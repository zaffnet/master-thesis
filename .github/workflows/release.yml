name: Build and Release PDF

on:
  push

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      pdf_name: ${{ steps.determine_pdf_name.outputs.pdf_name }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build PDF
        run: |
          docker run --rm -v "$(pwd)":/workspace -w /workspace texlive/texlive:TL2024-historic bash -c "
              pdflatex main.tex
              biber main
              pdflatex main.tex
              makeindex main
              pdflatex main.tex
          "

      - name: Determine PDF filename
        id: determine_pdf_name
        run: |
          SANITIZED_BRANCH="${GITHUB_REF_NAME//\//-}"
          echo "pdf_name=main-${SANITIZED_BRANCH}.pdf" >> "$GITHUB_OUTPUT"

      - name: Rename PDF to include branch name
        run: mv main.pdf "${{ steps.determine_pdf_name.outputs.pdf_name }}"

      - name: Upload PDF as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.determine_pdf_name.outputs.pdf_name }}
          path: ${{ steps.determine_pdf_name.outputs.pdf_name }}

  release:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - name: Download PDF artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.pdf_name }}

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ needs.build.outputs.pdf_name }}
          tag_name: release-${{ github.run_id }}
          body: |
            Automated release of the PDF compiled from commit ${{ github.sha }}.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
